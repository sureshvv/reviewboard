#summary Ideas for student projects
#labels Featured,Phase-Design

= Introduction =

This page lists some of the ideas we've come up with that students could tackle
for student projects. Proposals can be made based on items in this list, or you
can propose something entirely new.

You can also look at our bugs marked
[http://code.google.com/p/reviewboard/issues/list?can=2&q=label:ExtensionIdea ExtensionIdea] for more ideas.


= Diff Viewer Projects =


== Inline File Attachments ==

Review Board 1.6 introduced support for file attachments. They were standalone
and tied to a review request. We should also allow them to be uploaded and tied
to a diff, for binary files that otherwise wouldn't be able to be displayed.

This would involve updating the FileAttachment model to contain a source
revision field, which, along with its filename, would match data in a FileDiff.
These file attachments should be filtered out from the main review request
display.

The diff viewer, upon encountering a binary file that can't be displayed, should
look up a matching FileAttachment and display an entry for that inline.

A good addition would be to have a clean mechanism for registering a class that
would know how to render a file attachment in the diff viewer. It would be keyed
off by a mimetype. This mechanism should also be extensible so that extensions can
register themselves to handle particular mimetypes. A built-in one could render images.
The fallback would be to display a UI similar to that of the file attachments on the review
request page.

The web API would need to be updated to know how to filter, to take params for
the source revision, and to be able to get a related FileAttachment from a
FileDiff.

Once completed, we should replace the current screenshot review UI with the image attachment
binary file handler.

post-review would need to be updated to optionally upload binary files (under a
certain size) using this API.

*Code coverage:*

  * {{{rbtools}}}
  * {{{reviewboard/attachments}}}
  * {{{reviewboard/reviews/views.py}}}
  * {{{reviewboard/templates/diffviewer}}}
  * {{{reviewboard/webapi/resources.py}}}


= Review Request Projects =


= Extension Projects =

== Pluggable Review UIs ==

We'd like to allow extensions to provide UIs for reviewing file types other than
diffs. The most basic of these would provide a review UI for plain text files
(which would satisfy a long-running feature request to allow reviewing only the
current version of a file instead of a diff to it).

More complicated UIs could allow reviewing Microsoft Word or PDF documents,
diagrams, etc.


== Automated Static Analysis ==

Progress has been made to run static analysis tools automatically on code posted to
review board. The system currently runs the PEP8 style checker on python code, but additional
plugins must be written to support other tools.

Other possible projects include improvements to the tool plugin API, the admin UI, and
a system for tools to be triggered manually using the web UI.


= Web API Projects =

== Polish and Land Python Web Client Tools ==

There's been an ongoing effort to replace the useful, yet convoluted post-review
tool with a set of smaller tools and scripts that operate with the Review Board
Web API.

A lot of the foundational work has already been completed, and now we need to start
writing the smaller tools and scripts.

= Hosting Service Projects =

== Repository Auto-Configuration ==

We should update the repository management tool to support auto-configuration from a hosting service.

For example, the user should be able to register their GitHub account as a hosting service, and then the
management tool should list all of the repositories available to that account. The user should then be able
to just check off the repositories that they'd like to add.

There are workflow issues to solve here though, so this requires some investigation and research.

== Better Bug Tracker Integration ==

We'd like to allow the user to configure a bug tracker that could be associated with their repositories,
and to extend our HostingService support to allow posting to the bug trackers via their APIs.

== Automatic SSH Key Association ==

It would greatly simplify configuration on new setups if we could automatically support associating an
SSH key with a hosting service.

= General Web UI Projects =

== Fewer Reloads ==

Many operations today reload the page. For example, publishing a draft of a
review, or discarding, or closing a review request.

Ideally, we would be able to make some of these changes more dynamic. Instead of
doing a full reload, it would just dynamically update the page content.

The one trick with this work is making sure we don't have too many redundant
bits of UI. If we're rendering some stuff on initial page load from the
templates and then rendering separately on demand via JavaScript, we could get
into some inconsistencies down the road. So this would need a solution.

An option would be to have URLs that render the page content instead. Change
history descriptions, for example. Then it's handled in one place.

Some simple tasks here would be to handle the case of review drafts, so that
they don't reload the page. There, we're talking simple CSS class changes, or
removing elements.

This is a bit of a general task, and we'd need to figure out the specifics.

*Code coverage:*

  * {{{reviewboard/htdocs/media/rb/js}}}
  * {{{reviewboard/reviews}}}
  * {{{reviewboard/templates}}}