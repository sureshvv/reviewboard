#summary Ideas for the Review Board 2.0 release
#labels Phase-Design

= Introduction =

This is a dumping ground for ideas we'd like to see in Review Board 2.0. Some features are definitely planned while some are just possibilities.


== Hooks and Extensions ==

One of the big features of 2.0 will be support for hooks and extensions. Hooks are simple scripts that are invoked under certain operations (posting a new review request, or a new review). Extensions are pluggable components that users can install that will provide additional functionality to the product. These might provide new UI (for example, additional fields in the review request details box, a new section of the UI for custom data, or even a whole new front-end).

The plan is to turn the current iPhone UI into an extension. We might even make the Reports view an extension as well.

We may decide not to implement a separate concept for hooks and instead just use extensions, so that they can be managed easier. If done correctly, extensions will be really simple to write.

Feature requests tagged with [http://code.google.com/p/reviewboard/issues/list?q=milestone%3AExtensions Extensions] are candidates for future extensions.


== Improved Admin UI ==

The current administration UI is useful but we could simplify things a bit. The current /admin page containing a list of models will move to a separate page, and in its place will be a more user-friendly admin page with links for the common tasks administrators have to deal with. These will include:

 * Adding/changing review groups
 * Adding/changing repositories
 * Viewing site statistics (such as server load, caching information, etc.)
 * Managing extensions
 * Downloading a database dump

A link will be provided for accessing the current admin page. We won't be removing any functionality.

This page may also contain Review Board news on the side (such as release announcements).


== Dynamic Changes for Server Settings ==

Right now people must edit {{{settings_local.py}}} for all server settings. While this file will not be going away, we may want to give users the ability to modify some of this from a web UI. We can generate the resulting file ({{{settings_gen.py}}}?) in a server-writable directory.

Possible settings would include:

 * {{{SEND_REVIEW_MAIL}}}
 * {{{ENABLE_SEARCH}}}
 * {{{DIFF_SYNTAX_HIGHLIGHTING}}}
 * {{{REQUIRE_SITEWIDE_LOGIN}}}


== New Reviewable File Types ==

There has been some request for reviewing files other than diffs. Screenshots have been the main one, though someone suggested Wiki changes and specialized views for certain text documents.

It would be nice to make our current comment setup a bit more generalized and allow new models provided by extensions to associate a comment with their own data. These comments would be part of the review, and would have the extension render the necessary comments in the review. The extension would also be responsible for providing the whole review UI for this file type.

This would need some help from post-review, as binary files are not included in diffs. We would have to manually upload some files. Perhaps we can expose a list of supported mimetypes and file extensions for review, accessible through the API, and have post-review query that when deciding what to include in the diff.